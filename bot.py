import os
import threading
from flask import Flask
from dotenv import load_dotenv

app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã"

def run_flask():
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port)

from telegram import (
    Update, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
)
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters,
    ContextTypes, ConversationHandler
)

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))

WELCOME_TEXT = (
    "üå± –ü—Ä–∏–≤–µ—Ç! –¢—ã –≤ ¬´–ù–µ–π—Ä–æ–ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ¬ª ‚Äî –∑–¥–µ—Å—å —Ç–µ–±—è –ø—Ä–∏–Ω–∏–º–∞—é—Ç –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è –∏ –æ—Ü–µ–Ω–æ–∫.\n\n"
    "üß† –†–∞—Å—Å–∫–∞–∂–∏ –æ —Ç—Ä–µ–≤–æ–≥–µ, —Å—Ç—Ä–∞—Ö–µ –∏–ª–∏ —Ç—É–ø–∏–∫–µ ‚Äî —è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—á–∏—Ç–∞—é—Å—å –≤ —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –∏, –∫–∞–∫ –ø—Å–∏—Ö–æ–ª–æ–≥ –∏ –¥—Ä—É–≥, –æ—Ç–≤–µ—á—É —á–µ—Å—Ç–Ω–æ, –±–µ—Ä–µ–∂–Ω–æ –∏ —Å –∑–∞–±–æ—Ç–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫.\n\n"
    "ü§≤ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã—Ç—å —Å–æ–±–æ–π, –±–µ–∑ —Å—Ç—ã–¥–∞ –∏ –º–∞—Å–æ–∫.\n\n"
    "‚ú® –ñ–º–∏ ¬´–ù–∞—á–∞—Ç—å —Ä–∞–∑–±–æ—Ä¬ª ‚Äî —è —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –º–∏—Ä –∫–∞–∂–µ—Ç—Å—è —Å–ª–æ–∂–Ω—ã–º.\n\n"
    "üëã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n\n"
    "üí¨ –ü–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è ‚Äî —è –ª–∏—á–Ω–æ —á–∏—Ç–∞—é –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—á–∞—é —á–µ—Å—Ç–Ω–æ, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤.\n\n"
    "ü§ñ –Ø –∏—Å–ø–æ–ª—å–∑—É—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —á—Ç–æ–±—ã —Ä–∞–∑–±–∏—Ä–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –≥–ª—É–±–∂–µ –∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.\n\n"
    "üîí –í—Å—ë –æ–±—â–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∏ –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –º–µ–∂–¥—É –Ω–∞–º–∏.\n\n"
    "‚ùóÔ∏è –ï—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –≤—Ä–∞—á–∞–º –∏–ª–∏ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã."
)
SECOND_WELCOME = (
    "üí´ –Ø —á–µ–ª–æ–≤–µ–∫ ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥, –∏ –º–æ—è –∑–∞–¥–∞—á–∞ –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–∞: –±—ã—Ç—å —Ä—è–¥–æ–º, –∫–æ–≥–¥–∞ —Ç–µ–±–µ —Ç—è–∂–µ–ª–æ, –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å, –∫–∞–∫ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥. –Ø –º–Ω–æ–≥–æ —É—á–∏–ª—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–º–æ–≥–∞—Ç—å, –Ω–æ –∏ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Å–ª—É—à–∞—Ç—å. –í –Ω–∞—à–µ–º –¥–∏–∞–ª–æ–≥–µ –Ω–µ—Ç —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–µ–π: —è –Ω–µ –æ—Ü–µ–Ω–∏–≤–∞—é, –Ω–µ —Å–ø–µ—à—É —Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å, –∞ —Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–Ω—è—Ç—å –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞.\n\n"
    "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ –∏ –±—ã—Ç—å —Å–æ–±–æ–π. –Ø —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –Ω–∞–π—Ç–∏ —Å–≤–µ—Ç –¥–∞–∂–µ –≤ —Å–∞–º–æ–º —Å–ª–æ–∂–Ω–æ–º –¥–Ω–µ. –ù–µ –¥–µ—Ä–∂–∏ –≤—Å—ë –≤ —Å–µ–±–µ ‚Äî —Ç—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –ø–µ—Ä–≤—ã–π —à–∞–≥, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤ –∑–¥–µ—Å—å."
)
FAQ_TEXT = (
    "üå± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–ù–µ–π—Ä–æ–ü—Ä–æ–≤–æ–¥–Ω–∏–∫¬ª!\n\n"
    "–ó–¥–µ—Å—å —Ç–µ–±—è –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –ø—Å–∏—Ö–æ–ª–æ–≥: –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –∞ –æ—Ç–≤–µ—Ç –æ–±—ã—á–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.\n\n"
    "–í—Å—ë –ø–æ-–¥–æ–±—Ä–æ–º—É, –∞–Ω–æ–Ω–∏–º–Ω–æ –∏ –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è ‚Äî —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –±—ã—Ç—å —Å–æ–±–æ–π –∏ –Ω–µ –æ—Å—Ç–∞–≤–∞–ª—Å—è –æ–¥–∏–Ω –Ω–∞ –æ–¥–∏–Ω —Å–æ —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏.\n\n"
    "‚ú® –í ¬´–ù–µ–π—Ä–æ–ü—Ä–æ–≤–æ–¥–Ω–∏–∫–µ¬ª –Ω–µ—Ç —à–∞–±–ª–æ–Ω–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –∏ –≥–æ—Ç–æ–≤—ã—Ö ‚Äú–ª–µ–∫–∞—Ä—Å—Ç–≤‚Äù. –Ø –ø–æ–¥—Ö–æ–∂—É –∫ –∫–∞–∂–¥–æ–º—É —Ä–∞–∑–≥–æ–≤–æ—Ä—É —Å –∑–∞–±–æ—Ç–æ–π –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—É—Ç–∏ –¥–∞–∂–µ —Ç–∞–º, –≥–¥–µ –∫–∞–∂–µ—Ç—Å—è —Ç—É–ø–∏–∫. –¢–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –∑–¥–µ—Å—å –≤–∞–∂–Ω–∞, –∞ —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ ‚Äî –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n"
    "‚òïÔ∏è –ò–Ω–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–æ –∏ —Å–∞–º–æ–º—É —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µ –≤ –æ—Ç–≤–µ—Ç. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å ‚Äî —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–æ–π —Ç—Ä—É–¥ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ ¬´–ù–µ–π—Ä–æ–ü—Ä–æ–≤–æ–¥–Ω–∏–∫–∞¬ª. –≠—Ç–æ –∫–∞–∫ —É–≥–æ—Å—Ç–∏—Ç—å –º–µ–Ω—è —á–∞—à–∫–æ–π –∫–æ—Ñ–µ, —á—Ç–æ–±—ã —É –º–µ–Ω—è –±—ã–ª–æ –±–æ–ª—å—à–µ —Ä–µ—Å—É—Ä—Å–∞ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è —Ä—è–¥–æ–º –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç: \n"
    "https://www.tbank.ru/cf/e1uIACnwFj \n"
    "–ï—Å–ª–∏ —Ç–µ–±–µ —É–¥–æ–±–Ω–µ–µ ‚Äî –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –∫–∞—Ä—Ç—É: 2200-7006-2856-6506 (–¢-–ë–∞–Ω–∫)\n"
    "–≠—Ç–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –ª—é–±–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –∫–∞–∫ —Ç—ë–ø–ª–æ–µ ‚Äú—Å–ø–∞—Å–∏–±–æ‚Äù –∏ –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Ç—å —Ä—è–¥–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ —Å—É–º–º–∞, –∞ —Ç–≤–æ—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∏ –¥–æ–≤–µ—Ä–∏–µ.\n\n"
    "–í—Å—ë, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ. –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç ‚Äî —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —Å—é–¥–∞.\n\n"
    "üíö –ó–¥–µ—Å—å –¥–ª—è —Ç–µ–±—è –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –º–æ–∂–Ω–æ –±—ã—Ç—å —Å–æ–±–æ–π.\n"
    "–ù–µ –¥–µ—Ä–∂–∏ –≤—Å—ë –≤ —Å–µ–±–µ ‚Äî –¥–∞–π —Å–µ–±–µ —à–∞–Ω—Å –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è."
)

START_KEYBOARD = InlineKeyboardMarkup([
    [InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–∑–±–æ—Ä", callback_data="go_start")],
    [InlineKeyboardButton("‚ÑπÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="faq")]
])
SECOND_WELCOME_KEYBOARD = InlineKeyboardMarkup([
    [InlineKeyboardButton("–ó–¥–æ—Ä–æ–≤–æ!", callback_data="greeted")]
])
FAQ_KEYBOARD = InlineKeyboardMarkup([
    [InlineKeyboardButton("–î–∞, —Ö–æ—á—É –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å", callback_data="go_to_anketa")],
    [InlineKeyboardButton("–ü–æ–∑–∂–µ", callback_data="later")]
])
FINAL_KEYBOARD = InlineKeyboardMarkup([
    [InlineKeyboardButton("üìù –ü—Ä–æ–π—Ç–∏ —Ä–∞–∑–±–æ—Ä —Å –Ω—É–ª—è", callback_data="again")],
    [InlineKeyboardButton("üí¨ –ó–∞–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å", callback_data="extra")],
    [InlineKeyboardButton("üë• –ü–æ–∑–≤–∞—Ç—å –¥—Ä—É–≥–∞", switch_inline_query="–†–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–µ–π—Ä–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é: https://t.me/crisis_navigator_bot")],
    [InlineKeyboardButton("‚ÑπÔ∏è FAQ / –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="faq")],
    [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞", callback_data="restart")]
])

(NAME, AGE, CHOOSE_EMBODIMENT, EMBODIMENT_Q, EMBODIMENT_R) = range(10, 15)
(Q1, Q2, Q3, Q4, Q5, Q6, REFLECT1, REFLECT2) = range(1, 9)

QUESTIONS = [
    "–ü—Ä–∏–≤–µ—Ç! –°–µ–π—á–∞—Å –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ ‚Äî –æ—Ç–≤–µ—á–∞–π, –∫–∞–∫ —á—É–≤—Å—Ç–≤—É–µ—à—å. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ç–≤–æ–∏ –æ—â—É—â–µ–Ω–∏—è –∏ –º—ã—Å–ª–∏.\n\n–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–µ–π—á–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–∞–ø—Ä—è–≥–∞–µ—Ç –∏–ª–∏ —Ç—Ä–µ–≤–æ–∂–∏—Ç?\n\n‚ú® +1 –∫ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏!",
    "–°–ø–∞—Å–∏–±–æ! –≠—Ç–æ –≤–∞–∂–Ω–æ ‚Äî —Ç–≤–æ–∏ —á—É–≤—Å—Ç–≤–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç, –≥–¥–µ –≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å.\n\n–ê –∫–∞–∫–∞—è —ç–º–æ—Ü–∏—è –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤–æ–π, –∫–æ–≥–¥–∞ –¥—É–º–∞–µ—à—å –æ–± —ç—Ç–æ–º?\n\nüí° +1 –∫ —Å–∞–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—é!",
    "–û—Ç–ª–∏—á–Ω–æ, —Ç—ã –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –¥–µ–ª–∏—à—å—Å—è! –ï—Å–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ —ç—Ç–∏ —ç–º–æ—Ü–∏–∏ –∏—Å—á–µ–∑–ª–∏ —Ö–æ—Ç—è –±—ã –Ω–∞ –¥–µ–Ω—å, —á—Ç–æ –±—ã —Ç—ã –∑–∞—Ö–æ—Ç–µ–ª(–∞) —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–º?\n\n‚úÖ +1 –∫ —Å–º–µ–ª–æ—Å—Ç–∏!",
    "–°–ø–∞—Å–∏–±–æ! –£–∂–µ —Ö–æ—Ä–æ—à–∏–π —Å–¥–≤–∏–≥. –ê –ø—Ä–æ–±–æ–≤–∞–ª(–∞) —Ä–∞–Ω—å—à–µ —á—Ç–æ-—Ç–æ –º–µ–Ω—è—Ç—å –∏–ª–∏ –¥–µ–ª–∞—Ç—å –≤ –ø–æ—Ö–æ–∂–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö? –ö–∞–∫ —ç—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ –¥–ª—è —Ç–µ–±—è?\n\nüå± +1 –∫ –æ–ø—ã—Ç—É!",
    "–ï—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏ —á—É—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –ª—é–±–∞—è –º–µ–ª–æ—á—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞–∂–Ω–∞.\n\n–ï—Å—Ç—å –ª–∏ –æ—â—É—â–µ–Ω–∏–µ –º–∞–ª–µ–Ω—å–∫–æ–π –ø–æ–±–µ–¥—ã —Å–µ–≥–æ–¥–Ω—è? –ß—Ç–æ –¥–∞—ë—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –µ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ?\n\nüöÄ +1 –∫ –¥–≤–∏–∂–µ–Ω–∏—é!",
    "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å, —É—Ç–æ—á–Ω–∏—Ç—å –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –¥–µ—Ç–∞–ª—è–º–∏ ‚Äî –ø–∏—à–∏! –í—Å—ë –≤–∞–∂–Ω–æ.\n\nüôå +1 –∫ –æ—Ç–∫—Ä—ã—Ç–æ–º—É –¥–∏–∞–ª–æ–≥—É!"
]
REFLECTION_1 = "–ö–∞–∫ —Ç–µ–±–µ —Å–µ–π—á–∞—Å –ø–æ—Å–ª–µ —ç—Ç–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤? –°—Ç–∞–ª–æ –ª–∏ —Ö–æ—Ç—å —á—É—Ç—å –ø–æ–Ω—è—Ç–Ω–µ–µ –∏–ª–∏ –ª–µ–≥—á–µ?\n\nü™û +1 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏!"
REFLECTION_2 = "–ú–æ–∂–µ—Ç, –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ –æ—â—É—â–µ–Ω–∏–µ –∏–ª–∏ –º—ã—Å–ª—å, –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–Ω—å—à–µ –Ω–µ –±—ã–ª–æ?\n\nüéØ +1 –∫ –∏–Ω—Å–∞–π—Ç—É!"
EMBODIMENTS = {
  "soul_talk": {
        "title": "üü¢ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ –¥—É—à–∞–º",
        "questions": [
            "–ß—Ç–æ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –¥—É—à–µ? –û —á—ë–º –ø–µ—Ä–≤—ã–º –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å?",
            "–ö–∞–∫–∞—è —ç–º–æ—Ü–∏—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∑–≤—É—á–∏—Ç –≤–Ω—É—Ç—Ä–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?",
            "–ë—ã–ª –ª–∏ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Å—Ç–∞–ª–æ —á—É—Ç—å –ª–µ–≥—á–µ –∏–ª–∏ —Ä–∞–¥–æ—Å—Ç–Ω–µ–µ?",
            "–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ –¥–∞–≤–∏—Ç –∏–ª–∏ –≥—Ä—É–∑–∏—Ç?",
            "–ö–∞–∫ —Ç—ã –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å —Ç–∞–∫–∏–º–∏ –¥–Ω—è–º–∏?",
            "–ß—Ç–æ –±—ã —Ç—ã —Å–∫–∞–∑–∞–ª(–∞) —Å–µ–±–µ, –µ—Å–ª–∏ –±—ã –±—ã–ª(–∞) —Å–≤–æ–∏–º –ª—É—á—à–∏–º –¥—Ä—É–≥–æ–º?",
        ],
        "reflections": [
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —á—Ç–æ –≤–Ω—É—Ç—Ä–∏? –ü–æ—è–≤–∏–ª–æ—Å—å –ª–∏ –æ—â—É—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–ª–∏ —è—Å–Ω–æ—Å—Ç–∏?",
            "–û —á—ë–º —Ö–æ—á–µ—Ç—Å—è –ø–æ–¥—É–º–∞—Ç—å –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —à–∞–≥ –¥–∞–ª—å—à–µ?"
        ],
        "final": "–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫! –í –ª—é–±–æ–π –¥–µ–Ω—å –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
    },
    "day_review": {
        "title": "üü† –ë—ã—Å—Ç—Ä—ã–π —Ä–∞–∑–±–æ—Ä –¥–Ω—è",
        "questions": [
            "–ö–∞–∫–æ–π –º–æ–º–µ–Ω—Ç —Å–µ–≥–æ–¥–Ω—è –±—ã–ª —Å–∞–º—ã–º —Å–ª–æ–∂–Ω—ã–º?",
            "–ê –∫–∞–∫–æ–π ‚Äî –Ω–∞–æ–±–æ—Ä–æ—Ç, –ø–æ—Ä–∞–¥–æ–≤–∞–ª –∏–ª–∏ –¥–∞–ª –≤—ã–¥–æ—Ö–Ω—É—Ç—å?",
            "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ–º–æ–≥–ª–æ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏?",
            "–û —á—ë–º —Ç—Ä–µ–≤–æ–∂–∏—à—å—Å—è –∏–ª–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–µ—à—å —Å–µ–π—á–∞—Å?",
            "–ß—Ç–æ –±—ã –∏–∑–º–µ–Ω–∏–ª(–∞), –µ—Å–ª–∏ –±—ã –º–æ–≥(–ª–∞) –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Ç—Ä—É?",
            "–ß—Ç–æ –∏–∑ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è —Ö–æ—á–µ—Ç—Å—è –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π?",
        ],
        "reflections": [
            "–ö–∞–∫–∞—è –º—ã—Å–ª—å –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ –ø–æ—è–≤–∏–ª–∏—Å—å –ø–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞?",
            "–û —á—ë–º —Ö–æ—á–µ—Ç—Å—è –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–µ–±—è —Å–µ–≥–æ–¥–Ω—è?"
        ],
        "final": "–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —Ç–≤–æ–π –æ–ø—ã—Ç."
    },
    "vent": {
        "title": "üü£ –í—ã–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä",
        "questions": [
            "–î–∞–≤–∞–π —á–µ—Å—Ç–Ω–æ: —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤—ã–±–µ—Å–∏–ª–æ —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ–≥–æ?",
            "–ï—Å–ª–∏ –±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—Å—ë –≤—ã—Å–∫–∞–∑–∞—Ç—å –±–µ–∑ —Å—Ç–µ—Å–Ω–µ–Ω–∏—è ‚Äî —á—Ç–æ –±—ã —Å–∫–∞–∑–∞–ª(–∞)?",
            "–ö–∞–∫ –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å —Ç–∞–∫–∏–º–∏ —ç–º–æ—Ü–∏—è–º–∏?",
            "–ö–æ–º—É –±—ã —Ç—ã —Å–µ–π—á–∞—Å –∫–∏–Ω—É–ª(–∞) –∫–∞–º–µ–Ω—å‚Ä¶ –∏–ª–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç?",
            "–ë—ã–ª –ª–∏ –ø–æ–≤–æ–¥ –¥–ª—è —Å–º–µ—Ö–∞ –∏–ª–∏ –æ–±–ª–µ–≥—á–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è?",
            "–ß—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–¥—ã—Ö–∞—Ç—å –≤ —Å–∞–º—ã–µ –∑–ª—ã–µ –¥–Ω–∏?",
        ],
        "reflections": [
            "–°—Ç–∞–ª–æ –ª–∏ –ª–µ–≥—á–µ –ø–æ—Å–ª–µ ‚Äú—Ä–∞–∑–≥—Ä—É–∑–∫–∏‚Äù?",
            "–ß—Ç–æ –±—ã —Ö–æ—Ç–µ–ª(–∞) —Å–µ–±–µ –ø–æ–∂–µ–ª–∞—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞?"
        ],
        "final": "–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫! –î–∞–∂–µ –µ—Å–ª–∏ –≤–µ—Å—å –¥–µ–Ω—å –±—ã–ª ‚Äú–Ω–∞ –≥—Ä–∞–Ω–∏‚Äù."
    },
    "resource": {
        "title": "üîµ –ü–æ–π–º–∞—Ç—å —Ä–µ—Å—É—Ä—Å",
        "questions": [
            "–ë—ã–ª –ª–∏ —Å–µ–≥–æ–¥–Ω—è –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞) —Å–µ–±—è –∂–∏–≤—ã–º, –∞ –Ω–µ ‚Äú–Ω–∞ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–µ‚Äù?",
            "–ß—Ç–æ –Ω–∞–ø–æ–ª–Ω–∏–ª–æ —ç–Ω–µ—Ä–≥–∏–µ–π –∏–ª–∏ —Ö–æ—Ç—è –±—ã —á—É—Ç—å –ø–æ–¥–Ω—è–ª–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
            "–ß–µ–º –º–æ–∂–µ—à—å –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–µ–±—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –ø—É—Å—Ç—å –¥–∞–∂–µ –º–µ–ª–æ—á—å—é?",
            "–ö—Ç–æ –∏–ª–∏ —á—Ç–æ –¥–∞–ª —Å–µ–≥–æ–¥–Ω—è –ø–æ–¥–¥–µ—Ä–∂–∫—É?",
            "–ù–∞ —á—ë–º —Å–µ–≥–æ–¥–Ω—è —Ö–æ—á–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ü–µ–Ω—Ç ‚Äî –Ω–∞ –ø–æ–±–µ–¥–∞—Ö –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞ —Ç–æ–º, —á—Ç–æ –≤—ã–∂–∏–ª(–∞)?",
            "–ö–∞–∫–æ–π —Ä–µ—Å—É—Ä—Å —Ö–æ—á–µ—Ç—Å—è —É–Ω–µ—Å—Ç–∏ —Å —Å–æ–±–æ–π –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å?",
        ],
        "reflections": [
            "–ö–∞–∫ —Ç—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ —Å–µ–±–µ –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã?",
            "–ö–∞–∫–∏–µ —Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"
        ],
        "final": "–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫! –í—Å—ë, —á—Ç–æ –Ω–∞—à—ë–ª —Å–µ–≥–æ–¥–Ω—è ‚Äî —Ç–≤–æ—è —Å–∏–ª–∞."
    },
    "just_talk": {
        "title": "üü§ –ü—Ä–æ—Å—Ç–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è",
        "questions": [
            "–û —á—ë–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ö–æ—Ç–µ–ª–æ—Å—å –º–æ–ª—á–∞—Ç—å, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ —Ç—è–Ω–µ—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å?",
            "–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Ö–æ—á–µ—Ç—Å—è –≤—ã–ø–ª–µ—Å–Ω—É—Ç—å ‚Äî —Ä–∞–¥–æ—Å—Ç—å, –±–æ–ª—å, —Å—Ç—Ä–∞—Ö –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–ª–æ—Å—Ç—å?",
            "–ï—Å–ª–∏ –±—ã —Ç–µ–±–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–ª–∏ –ø–æ–ª–Ω–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ ‚Äî —á—Ç–æ –±—ã —Å–∫–∞–∑–∞–ª(–∞)?",
            "–ß—Ç–æ —Å–µ–π—á–∞—Å –∫–∞–∂–µ—Ç—Å—è –Ω–µ—Ä–∞–∑—Ä–µ—à–∏–º—ã–º?",
            "–ë—ã–ª–æ –ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ä–∞–¥–æ–≤–∞–ª–æ –∏–ª–∏ –≤—ã–∑–≤–∞–ª–æ —É–ª—ã–±–∫—É?",
            "–ù–∞ –∫–∞–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞–¥–µ–µ—à—å—Å—è (–∏–ª–∏ —É–∂–µ –ø–æ–ª—É—á–∏–ª(–∞))?",
        ],
        "reflections": [
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —á—Ç–æ –æ—Ç–ø—É—Å—Ç–∏–ª–æ, –∞ —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å?",
            "–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –æ–ø–∏—à–µ—Ç —Ç–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?"
        ],
        "final": "–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫! –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –¥–µ—Ä–∂–∞—Ç—å –≤ —Å–µ–±–µ."
    },
    "secret_friend": {
        "title": "üïµÔ∏è‚Äç‚ôÇÔ∏è –°–µ–∫—Ä–µ—Ç–Ω—ã–π –¥—Ä—É–≥",
        "questions": [
            "–ß—Ç–æ –±—ã —Ç—ã —Å–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∑–∞–ª(–∞) —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–º—É –±–ª–∏–∑–∫–æ–º—É?",
            "–ö–∞–∫–æ–µ —á—É–≤—Å—Ç–≤–æ —Ç—Ä—É–¥–Ω–µ–µ –≤—Å–µ–≥–æ –ø—Ä—è—Ç–∞—Ç—å –≤ —Å–µ–±–µ?",
            "–ë—ã–ª–∞ –ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —Ö–æ—Ç—å –º–∞–ª–µ–Ω—å–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å?",
            "–ï—Å—Ç—å –ª–∏ –∫—Ç–æ-—Ç–æ, –∫–æ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä—è–¥–æ–º —Å–µ–π—á–∞—Å?",
            "–ö–∞–∫ –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è, –∫–æ–≥–¥–∞ –Ω–µ —Å –∫–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è?",
            "–ß—Ç–æ —Ö–æ—á–µ—Ç—Å—è —É—Å–ª—ã—à–∞—Ç—å –æ—Ç –¥—Ä—É–≥–∞, –µ—Å–ª–∏ —á–µ—Å—Ç–Ω–æ?",
        ],
        "reflections": [
            "–ö–∞–∫ —Ç–µ–±–µ –ø–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞?",
            "–°—Ç–∞–ª–æ –ª–∏ –≤–Ω—É—Ç—Ä–∏ —Ö–æ—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Å–ø–æ–∫–æ–π–Ω–µ–µ?"
        ],
        "final": "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–≤–µ—Ä–∏–ª—Å—è ‚Äî –∑–¥–µ—Å—å —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –≤—Å–µ–≥–¥–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
    },
    "heart_voice": {
        "title": "‚ù§Ô∏è –ì–æ–ª–æ—Å —Å–µ—Ä–¥—Ü–∞",
        "questions": [
            "–û —á—ë–º —Ç–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –º–æ–ª—á–∏—Ç, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Å–∫–∞–∑–∞—Ç—å –≤—Å–ª—É—Ö?",
            "–ö–∞–∫–∞—è —ç–º–æ—Ü–∏—è —Å–µ–π—á–∞—Å –≥—Ä–æ–º—á–µ –≤—Å–µ–≥–æ –∑–≤—É—á–∏—Ç –≤–Ω—É—Ç—Ä–∏?",
            "–ö–æ–≥–¥–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ç—ã —Ä–∞–¥–æ–≤–∞–ª—Å—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫?",
            "–ß—Ç–æ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≥—Ä–µ–µ—Ç –¥—É—à—É –≤ —Ç—è–∂—ë–ª—ã–µ –¥–Ω–∏?",
            "–ö–∞–∫ —Ç—ã –ø—Ä–æ—è–≤–ª—è–µ—à—å –∑–∞–±–æ—Ç—É –æ —Å–µ–±–µ?",
            "–û —á—ë–º —Å–µ–π—á–∞—Å –º–µ—á—Ç–∞–µ—Ç—Å—è, –ø—É—Å—Ç—å –¥–∞–∂–µ —á—É—Ç—å-—á—É—Ç—å?",
        ],
        "reflections": [
            "–°–ª—É—à–∞—è —Å–µ–±—è, —á—Ç–æ –ø–æ–Ω—è–ª(–∞) –Ω–æ–≤–æ–≥–æ?",
            "–•–æ—á–µ—Ç—Å—è –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–µ–±—è —á–µ–º-—Ç–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?"
        ],
        "final": "–¢—ã —É—Å–ª—ã—à–∞–Ω ‚Äî –∏ –ø—É—Å—Ç—å —Ç–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≥–æ–ª–æ—Å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Ç–µ–±–µ –¥—Ä—É–≥–æ–º."
    },
    "open_soul": {
        "title": "ü§≤ –û—Ç–∫—Ä—ã—Ç–∞—è –¥—É—à–∞",
        "questions": [
            "–û —á—ë–º –±—ã —Ç—ã —Ä–∞—Å—Å–∫–∞–∑–∞–ª(–∞), –µ—Å–ª–∏ –±—ã –Ω–µ –±–æ—è–ª—Å—è(–∞—Å—å –æ—Å—É–∂–¥–µ–Ω–∏—è?",
            "–ß—Ç–æ —Å–µ–π—á–∞—Å —Ä–∞–Ω–∏—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?",
            "–ë—ã–ª–∏ –ª–∏ –º–æ–º–µ–Ω—Ç—ã —Å–µ–≥–æ–¥–Ω—è, –∫–æ–≥–¥–∞ —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ?",
            "–ß—Ç–æ –±—ã —Ö–æ—Ç–µ–ª(–∞) —Å–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ, –Ω–æ –Ω–∏–∫–∞–∫ –Ω–µ —Ä–µ—à–∞–ª—Å—è(–∞—Å—å)?",
            "–ö–∞–∫ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–≤–æ—é —Å–∏–ª—É –≤–Ω—É—Ç—Ä–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–∫–∞ –Ω–µ –≤–∏–¥–∏—à—å?",
            "–ï—Å–ª–∏ –±—ã –º–æ–≥(–ª–∞) –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤—Å–µ–ª–µ–Ω–Ω—É—é –æ —á—ë–º-—Ç–æ, —á—Ç–æ –±—ã —ç—Ç–æ –±—ã–ª–æ?",
        ],
        "reflections": [
            "–ü–æ—Å–ª–µ —Ç–∞–∫–æ–π –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ—Å—Ç–∏, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏?",
            "–û —á—ë–º —Ö–æ—á–µ—Ç—Å—è –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–µ–±—è?"
        ],
        "final": "–ó–¥–µ—Å—å –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º ‚Äî –±–µ–∑ –º–∞—Å–æ–∫, –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞."
    },
    "support_chat": {
        "title": "üí¨ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
        "questions": [
            "–í —á—ë–º —Å–µ–π—á–∞—Å –æ—Å–æ–±–µ–Ω–Ω–æ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞?",
            "–ö—Ç–æ –±—ã–ª —Ä—è–¥–æ–º –∏–ª–∏ –ø–æ–º–æ–≥–∞–ª —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è?",
            "–ö–∞–∫ —Ç—ã –æ–±—ã—á–Ω–æ —Å–µ–±—è –ø–æ–¥–±–∞–¥—Ä–∏–≤–∞–µ—à—å?",
            "–ö–æ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ —Ç–µ–±–µ –≥–æ–≤–æ—Ä–∏–ª–∏ —Ç—ë–ø–ª—ã–µ —Å–ª–æ–≤–∞?",
            "–ß—Ç–æ —Ö–æ—á–µ—à—å —É—Å–ª—ã—à–∞—Ç—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?",
            "–ö–æ–º—É –±—ã —Å–∞–º(–∞) —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥(–ª–∞)?",
        ],
        "reflections": [
            "–ß—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞), –∫–æ–≥–¥–∞ —Å–º–æ–≥(–ª–∞) –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è?",
            "–û—â—É—â–∞–µ—à—å –ª–∏ —Å–µ–π—á–∞—Å –±–æ–ª—å—à–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ?"
        ],
        "final": "–ó–¥–µ—Å—å —Ç–µ–±—è –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –≤ –æ—Å—Ç–∞–ª—å–Ω–æ–º –º–∏—Ä–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç."
    },
    "quiet_harbor": {
        "title": "üåä –¢–∏—Ö–∞—è –≥–∞–≤–∞–Ω—å",
        "questions": [
            "–ì–¥–µ —Ç–≤–æ—è ‚Äú—Ç–∏—Ö–∞—è –≥–∞–≤–∞–Ω—å‚Äù ‚Äî –º—ã—Å–ª–µ–Ω–Ω–æ –∏–ª–∏ –Ω–∞—è–≤—É?",
            "–ß—Ç–æ –æ–±—ã—á–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø–æ—Å–ª–µ —Ç—Ä—É–¥–Ω–æ–≥–æ –¥–Ω—è?",
            "–ö–∞–∫–∞—è –º–µ–ª–æ—á—å —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω–µ—Å–ª–∞ –ø–æ–∫–æ–π –∏–ª–∏ —É–ª—ã–±–∫—É?",
            "–ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–∞–≤–∞–ª–æ—Å—å –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑?",
            "–û —á—ë–º —Ö–æ—á–µ—Ç—Å—è –∑–∞–±—ã—Ç—å —Ö–æ—Ç—è –±—ã –Ω–∞ –≤—Ä–µ–º—è?",
            "–ß–µ–º –±—ã –Ω–∞–ø–æ–ª–Ω–∏–ª(–∞) —Å–≤–æ—ë —Ç–∏—Ö–æ–µ –º–µ—Å—Ç–æ ‚Äî –∑–≤—É–∫–∞–º–∏, –∑–∞–ø–∞—Ö–∞–º–∏, –º—ã—Å–ª—è–º–∏?",
        ],
        "reflections": [
            "–ß—É–≤—Å—Ç–≤—É–µ—à—å –ª–∏ —Ç—ã —Å–µ–π—á–∞—Å —á—É—Ç—å –±–æ–ª—å—à–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è?",
            "–ö–∞–∫ —Ö–æ—á–µ—à—å –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏?"
        ],
        "final": "–¢–≤–æ—è –≥–∞–≤–∞–Ω—å –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å—é–¥–∞, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å —Ç–∏—à–∏–Ω—ã –∏ –ø—Ä–∏–Ω—è—Ç–∏—è."
    }
}
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    if update.message:
        await update.message.reply_text(WELCOME_TEXT, reply_markup=START_KEYBOARD)
    elif update.callback_query:
        await update.callback_query.message.reply_text(WELCOME_TEXT, reply_markup=START_KEYBOARD)

async def on_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()
    if data == "go_start":
        await query.edit_message_text(
            SECOND_WELCOME,
            reply_markup=SECOND_WELCOME_KEYBOARD
        )
    elif data == "greeted":
        await query.edit_message_text("–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! –ö–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–ò–º—è)")
        return NAME
    elif data == "faq":
        await query.edit_message_text(
            FAQ_TEXT,
            reply_markup=FAQ_KEYBOARD,
        )
    elif data == "go_to_anketa":
        await query.edit_message_text("–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–ò–º—è)")
        return NAME
    elif data == "later":
        await query.edit_message_text("–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /start –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é.")
    elif data == "extra":
        await query.edit_message_text("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç—É –ª–∏—á–Ω–æ.")
        context.user_data['wait_extra'] = True
    elif data == "again":
        await query.edit_message_text("–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º –Ω–æ–≤—ã–π —Ä–∞–∑–±–æ—Ä!\n–ö–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–ò–º—è)")
        return NAME
    elif data == "restart":
        await query.message.reply_text(WELCOME_TEXT, reply_markup=START_KEYBOARD)

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text.strip()
    await update.message.reply_text("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? (–£–∫–∞–∂–∏ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ)")
    return AGE

async def get_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if not text.isdigit() or not (0 < int(text) < 120):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ (–æ—Ç 1 –¥–æ 120).")
        return AGE
    context.user_data["age"] = text

    # --- –ö–Ω–æ–ø–∫–∏: –í–°–ï —Å—Ü–µ–Ω–∞—Ä–∏–∏ + "–ù–µ –∑–Ω–∞—é" ---
    embodiment_keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton(e["title"], callback_data=f"embody_{key}")]
        for key, e in EMBODIMENTS.items()
    ] + [
        [InlineKeyboardButton("ü§î –ù–µ –∑–Ω–∞—é ‚Äî –ø—Ä–æ—Å—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä", callback_data="classic_review")]
    ])
    await update.message.reply_text(
        "–ß—Ç–æ —Ç–µ–±–µ –ø–æ –¥—É—à–µ? –í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π üëá",
        reply_markup=embodiment_keyboard
    )
    return CHOOSE_EMBODIMENT

async def on_embodiment_chosen(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "classic_review":
        await query.edit_message_text("–ù–∞—á–Ω—ë–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–æ—Ä!\n\n" + QUESTIONS[0])
        context.user_data["current_q"] = 0
        return Q1

    chosen_key = data.replace("embody_", "")
    context.user_data["embodiment"] = chosen_key
    questions = EMBODIMENTS[chosen_key]["questions"]
    context.user_data["questions"] = questions
    context.user_data["reflections"] = EMBODIMENTS[chosen_key]["reflections"]
    context.user_data["final"] = EMBODIMENTS[chosen_key]["final"]
    await query.edit_message_text(f"–¢—ã –≤—ã–±—Ä–∞–ª: {EMBODIMENTS[chosen_key]['title']}\n\n–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!")
    await query.message.reply_text(questions[0])
    context.user_data["current_q"] = 0
    return EMBODIMENT_Q

# –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
async def q1(update, context): context.user_data['q1'] = update.message.text.strip(); await update.message.reply_text(QUESTIONS[1]); return Q2
async def q2(update, context): context.user_data['q2'] = update.message.text.strip(); await update.message.reply_text(QUESTIONS[2]); return Q3
async def q3(update, context): context.user_data['q3'] = update.message.text.strip(); await update.message.reply_text(QUESTIONS[3]); return Q4
async def q4(update, context): context.user_data['q4'] = update.message.text.strip(); await update.message.reply_text(QUESTIONS[4]); return Q5
async def q5(update, context): context.user_data['q5'] = update.message.text.strip(); await update.message.reply_text(QUESTIONS[5]); return Q6
async def q6(update, context): context.user_data['q6'] = update.message.text.strip(); await update.message.reply_text(REFLECTION_1); return REFLECT1
async def reflect1(update, context): context.user_data['reflect1'] = update.message.text.strip(); await update.message.reply_text(REFLECTION_2); return REFLECT2

async def reflect2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['reflect2'] = update.message.text.strip()
    name = context.user_data.get('name', '‚Äî')
    age = context.user_data.get('age', '‚Äî')
    summary = f"""üßë‚Äçüíº –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç:\n–ò–º—è: {name}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n\nüîé –ö–∞—Ä—Ç–∞ —Ä–∞–∑–±–æ—Ä–∞:\n1. {QUESTIONS[0].splitlines()[-3]} ‚Äî {context.user_data['q1']}\n2. {QUESTIONS[1].splitlines()[-3]} ‚Äî {context.user_data['q2']}\n3. {QUESTIONS[2].splitlines()[-3]} ‚Äî {context.user_data['q3']}\n4. {QUESTIONS[3].splitlines()[-3]} ‚Äî {context.user_data['q4']}\n5. {QUESTIONS[4].splitlines()[-3]} ‚Äî {context.user_data['q5']}\n6. {QUESTIONS[5].splitlines()[-3]} ‚Äî {context.user_data['q6']}\n\nü™û –°–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏—è:\n{REFLECTION_1.splitlines()[0]} ‚Äî {context.user_data['reflect1']}\n{REFLECTION_2.splitlines()[0]} ‚Äî {context.user_data['reflect2']}\n"""
    user_chat_id = update.message.chat_id
    try:
        if ADMIN_ID:
            await context.bot.send_message(ADMIN_ID, summary)
            await context.bot.send_message(
                ADMIN_ID,
                f"ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞: /reply <code>{user_chat_id}</code>",
                parse_mode="HTML"
            )
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É:", e)
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ, —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã —É–∂–µ —É —ç–∫—Å–ø–µ—Ä—Ç–∞.\n\n "
        "üí¨ –Ø –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—Å—ë –ø—Ä–æ—á–∏—Ç–∞—é –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –¥–ª—è —Ç–µ–±—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä ‚Äî –æ–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ —Å—É—Ç–æ–∫, –≤–µ–¥—å —Ö–æ—á–µ—Ç—Å—è –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–Ω–∏–∫–Ω—É—Ç—å –≤ —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å.\n\n"
        "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Ç—ã –Ω–∞ —Å–≤—è–∑–∏ ‚Äî –∏ –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–∞–∑–±–æ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤, —Ç—ã —Å—Ä–∞–∑—É –µ–≥–æ –ø–æ–ª—É—á–∏—à—å. –ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∏–∂–µ üëá –û—Ç–≤–µ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç, –¥–µ—Ä–∂—É —Å–≤—è–∑—å! üôå\n\n",
        reply_markup=FINAL_KEYBOARD
    )
    return ConversationHandler.END

# –í–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ):
async def embodiment_questions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q_num = context.user_data["current_q"] + 1
    questions = context.user_data["questions"]
    answers = context.user_data.setdefault("embodiment_answers", [])

    user = update.message.from_user
    answer_text = ""

    if update.message.text:
        answer_text = update.message.text.strip()
    elif update.message.photo:
        photo_file_id = update.message.photo[-1].file_id
        answer_text = "[–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_photo(
                ADMIN_ID, photo=photo_file_id,
                caption=f"–§–æ—Ç–æ –æ—Ç @{user.username or user.first_name} (id: {user.id})\n–ö –≤–æ–ø—Ä–æ—Å—É: {questions[context.user_data['current_q']]}"
            )
    elif update.message.voice:
        answer_text = "[–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_voice(
                ADMIN_ID, voice=update.message.voice.file_id,
                caption=f"–ì–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç @{user.username or user.first_name} (id: {user.id})\n–ö –≤–æ–ø—Ä–æ—Å—É: {questions[context.user_data['current_q']]}"
            )
    elif update.message.audio:
        answer_text = "[–ê—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_audio(
                ADMIN_ID, audio=update.message.audio.file_id,
                caption=f"–ê—É–¥–∏–æ –æ—Ç @{user.username or user.first_name} (id: {user.id})\n–ö –≤–æ–ø—Ä–æ—Å—É: {questions[context.user_data['current_q']]}"
            )
    elif update.message.document:
        answer_text = "[–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω]"
        if ADMIN_ID:
            await context.bot.send_document(
                ADMIN_ID, document=update.message.document.file_id,
                caption=f"–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç @{user.username or user.first_name} (id: {user.id})\n–ö –≤–æ–ø—Ä–æ—Å—É: {questions[context.user_data['current_q']]}"
            )
    elif update.message.video:
        answer_text = "[–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_video(
                ADMIN_ID, video=update.message.video.file_id,
                caption=f"–í–∏–¥–µ–æ –æ—Ç @{user.username or user.first_name} (id: {user.id})\n–ö –≤–æ–ø—Ä–æ—Å—É: {questions[context.user_data['current_q']]}"
            )
    else:
        answer_text = "[–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞]"

    answers.append(answer_text)

    if q_num < len(questions):
        context.user_data["current_q"] = q_num
        await update.message.reply_text(questions[q_num])
        return EMBODIMENT_Q
    else:
        await update.message.reply_text(context.user_data["reflections"][0])
        context.user_data["current_r"] = 0
        return EMBODIMENT_R

async def embodiment_reflections(update: Update, context: ContextTypes.DEFAULT_TYPE):
    r_num = context.user_data["current_r"] + 1
    reflections = context.user_data["reflections"]
    answers = context.user_data.setdefault("embodiment_reflect", [])
    user = update.message.from_user
    answer_text = ""

    if update.message.text:
        answer_text = update.message.text.strip()
    elif update.message.photo:
        photo_file_id = update.message.photo[-1].file_id
        answer_text = "[–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_photo(
                ADMIN_ID, photo=photo_file_id,
                caption=f"–§–æ—Ç–æ (—Ä–µ—Ñ–ª–µ–∫—Å–∏—è) –æ—Ç @{user.username or user.first_name} (id: {user.id})"
            )
    elif update.message.voice:
        answer_text = "[–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_voice(
                ADMIN_ID, voice=update.message.voice.file_id,
                caption=f"–ì–æ–ª–æ—Å–æ–≤–æ–µ (—Ä–µ—Ñ–ª–µ–∫—Å–∏—è) –æ—Ç @{user.username or user.first_name} (id: {user.id})"
            )
    elif update.message.audio:
        answer_text = "[–ê—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_audio(
                ADMIN_ID, audio=update.message.audio.file_id,
                caption=f"–ê—É–¥–∏–æ (—Ä–µ—Ñ–ª–µ–∫—Å–∏—è) –æ—Ç @{user.username or user.first_name} (id: {user.id})"
            )
    elif update.message.document:
        answer_text = "[–î–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω]"
        if ADMIN_ID:
            await context.bot.send_document(
                ADMIN_ID, document=update.message.document.file_id,
                caption=f"–î–æ–∫—É–º–µ–Ω—Ç (—Ä–µ—Ñ–ª–µ–∫—Å–∏—è) –æ—Ç @{user.username or user.first_name} (id: {user.id})"
            )
    elif update.message.video:
        answer_text = "[–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ]"
        if ADMIN_ID:
            await context.bot.send_video(
                ADMIN_ID, video=update.message.video.file_id,
                caption=f"–í–∏–¥–µ–æ (—Ä–µ—Ñ–ª–µ–∫—Å–∏—è) –æ—Ç @{user.username or user.first_name} (id: {user.id})"
            )
    else:
        answer_text = "[–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞]"

    answers.append(answer_text)

    if r_num < len(reflections):
        context.user_data["current_r"] = r_num
        await update.message.reply_text(reflections[r_num])
        return EMBODIMENT_R
    else:
        name = context.user_data.get("name", "‚Äî")
        age = context.user_data.get("age", "‚Äî")
        embodiment_key = context.user_data.get("embodiment", "‚Äî")
        embodiment_title = EMBODIMENTS[embodiment_key]["title"] if embodiment_key in EMBODIMENTS else "‚Äî"
        questions = context.user_data.get("questions", [])
        answers = context.user_data.get("embodiment_answers", [])
        reflections = context.user_data.get("reflections", [])
        reflect_answers = context.user_data.get("embodiment_reflect", [])

        summary = (
            f"üßë‚Äçüíº –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç:\n"
            f"–ò–º—è: {name}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {age}\n"
            f"–°—Ü–µ–Ω–∞—Ä–∏–π: {embodiment_title}\n\n"
            "üîé –ö–∞—Ä—Ç–∞ —Ä–∞–∑–±–æ—Ä–∞:\n"
        )
        for idx, q in enumerate(questions):
            summary += f"{idx+1}. {q} ‚Äî {answers[idx] if idx < len(answers) else '-'}\n"
        summary += "\nü™û –°–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏—è:\n"
        for idx, r in enumerate(reflections):
            summary += f"{r} ‚Äî {reflect_answers[idx] if idx < len(reflect_answers) else '-'}\n"

        user_chat_id = update.message.chat_id
        try:
            if ADMIN_ID:
                await context.bot.send_message(ADMIN_ID, summary)
                await context.bot.send_message(
                    ADMIN_ID,
                    f"ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞: /reply <code>{user_chat_id}</code>",
                    parse_mode="HTML"
                )
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É:", e)

        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ, —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã —É–∂–µ —É —ç–∫—Å–ø–µ—Ä—Ç–∞.\n\n"
            "üí¨ –Ø –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—Å—ë –ø—Ä–æ—á–∏—Ç–∞—é –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é –¥–ª—è —Ç–µ–±—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä ‚Äî –æ–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ —Å—É—Ç–æ–∫, –≤–µ–¥—å —Ö–æ—á–µ—Ç—Å—è –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–Ω–∏–∫–Ω—É—Ç—å –≤ —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å.\n\n"
            "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Ç—ã –Ω–∞ —Å–≤—è–∑–∏ ‚Äî –∏ –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–∞–∑–±–æ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤, —Ç—ã —Å—Ä–∞–∑—É –µ–≥–æ –ø–æ–ª—É—á–∏—à—å. –ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∏–∂–µ üëá –û—Ç–≤–µ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç, –¥–µ—Ä–∂—É —Å–≤—è–∑—å! üôå\n\n",
            reply_markup=FINAL_KEYBOARD
        )
        return ConversationHandler.END

async def forward_extra_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    if context.user_data.get('wait_extra'):
        if ADMIN_ID:
            await context.bot.send_message(
                ADMIN_ID,
                f"üì© –ù–æ–≤—ã–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{user.username or user.first_name} (id: {user.id}):\n\n{text}"
            )
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ, —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ü—Å–∏—Ö–æ–ª–æ–≥ —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç –ª–∏—á–Ω–æ —Å—é–¥–∞."
        )
        context.user_data['wait_extra'] = False

async def reply_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    if not context.args or len(context.args) < 2:
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /reply <chat_id> <—Ç–µ–∫—Å—Ç>")
        return

    chat_id = context.args[0]
    text = " ".join(context.args[1:])

    try:
        await context.bot.send_message(chat_id=int(chat_id), text=text)
        await update.message.reply_text("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚úÖ")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

async def set_commands(app):
    await app.bot.set_my_commands([
        BotCommand("start", "–ù–∞—á–∞—Ç—å —Å –Ω—É–ª—è"),
        BotCommand("cancel", "–û—Ç–º–µ–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥"),
        BotCommand("reply", "–û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É (–¥–ª—è –∞–¥–º–∏–Ω–∞)")
    ])

def main():
    app_tg = ApplicationBuilder().token(BOT_TOKEN).post_init(set_commands).build()

    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("start", start),
            CallbackQueryHandler(on_callback_query)
        ],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_age)],
            CHOOSE_EMBODIMENT: [CallbackQueryHandler(on_embodiment_chosen, pattern="^(embody_|classic_review)")],
            EMBODIMENT_Q: [MessageHandler(filters.ALL & ~filters.COMMAND, embodiment_questions)],
            EMBODIMENT_R: [MessageHandler(filters.ALL & ~filters.COMMAND, embodiment_reflections)],
            Q1: [MessageHandler(filters.TEXT & ~filters.COMMAND, q1)],
            Q2: [MessageHandler(filters.TEXT & ~filters.COMMAND, q2)],
            Q3: [MessageHandler(filters.TEXT & ~filters.COMMAND, q3)],
            Q4: [MessageHandler(filters.TEXT & ~filters.COMMAND, q4)],
            Q5: [MessageHandler(filters.TEXT & ~filters.COMMAND, q5)],
            Q6: [MessageHandler(filters.TEXT & ~filters.COMMAND, q6)],
            REFLECT1: [MessageHandler(filters.TEXT & ~filters.COMMAND, reflect1)],
            REFLECT2: [MessageHandler(filters.TEXT & ~filters.COMMAND, reflect2)],
        },
        fallbacks=[CommandHandler("cancel", start)],
        per_message=False,
        per_chat=True,
    )

    app_tg.add_handler(conv_handler)
    app_tg.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_extra_message))
    app_tg.add_handler(CommandHandler("reply", reply_command))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app_tg.run_polling()

if __name__ == "__main__":
    load_dotenv()
    threading.Thread(target=run_flask, daemon=True).start()
    main()
